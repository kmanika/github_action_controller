apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-actions-runner-controller
  namespace: git-action-runner-new
  labels:
    helm.sh/chart: actions-runner-controller-0.22.0
    app.kubernetes.io/name: actions-runner-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.27.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: actions-runner-controller
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: actions-runner-controller
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-actions-runner-controller
      securityContext:
        {}
      containers:
      - args:
        - "--metrics-addr=127.0.0.1:8080"
        - "--enable-leader-election"
        - "--port=9443"
        - "--sync-period=10m"
        - "--default-scale-down-delay=10m"
        - "--docker-image=docker:dind"
        - "--runner-image=summerwind/actions-runner:latest"  
        - "--log-format=text"
        command:
        - "/manager"
        env:
        - name: GITHUB_APP_ID
          valueFrom:
            secretKeyRef:
              key: github_app_id
              name: controller-manager
              optional: true
        - name: GITHUB_APP_INSTALLATION_ID
          valueFrom:
            secretKeyRef:
              key: github_app_installation_id
              name: controller-manager
              optional: true
        - name: GITHUB_APP_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              key: github_app_private_key
              name: controller-manager
              optional: true
        image: "summerwind/actions-runner-controller:v0.27.0"
        name: manager
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
            {}
        securityContext:
            {}
        volumeMounts:
        - mountPath: "/etc/actions-runner-controller"
          name: secret
          readOnly: true
        - mountPath: /tmp
          name: tmp
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - "--secure-listen-address=0.0.0.0:8443"
        - "--upstream=http://127.0.0.1:8080/"
        - "--logtostderr=true"
        - "--v=10"
        image: "quay.io/brancz/kube-rbac-proxy:v0.13.1"
        name: kube-rbac-proxy
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8443
          name: metrics-port
        resources:
            {}
        securityContext:
            {}
      terminationGracePeriodSeconds: 10
      volumes:
      - name: secret
        secret:
          secretName: controller-manager
      - name: cert
        secret:
          defaultMode: 420
          secretName: release-name-actions-runner-controller-serving-cert
      - name: tmp
        emptyDir: {}
